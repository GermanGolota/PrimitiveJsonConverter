using System.CodeDom.Compiler;
using System.Globalization;
using System.Text;

namespace PrimitiveJsonConverterGenerator;

internal static class LoaderWriter
{
    public static string WriteCode(IEnumerable<string> classes)
    {
        var codeBuilder = new StringBuilder();
        using var writer = new StringWriter(codeBuilder, CultureInfo.InvariantCulture);
        using var source = new IndentedTextWriter(writer, "\t");
        source.WriteLine("﻿// <auto-generated />");
        source.WriteLine("﻿#nullable enable");
        source.WriteLine("﻿using System.Text.Json;");
        source.WriteLine($"namespace {nameof(PrimitiveJsonConverterGenerator)}");
        source.WriteLine("{");
        source.Indent++;
        source.WriteLine($"internal static partial class {ConstantCode.LoaderName}");
        source.WriteLine("{");
        source.Indent++;
        source.WriteLine($"public static partial void Load()");
        source.WriteLine("{");
        source.Indent++;
        foreach (var @class in classes)
        {
            source.WriteLine($"{@class}.Load();");
        }
        source.Indent--;
        source.WriteLine("}");
        source.Indent--;
        source.WriteLine("}");
        source.Indent--;
        source.WriteLine("}");
        source.WriteLine("﻿#nullable disable");
        return codeBuilder.ToString();
    }
}
